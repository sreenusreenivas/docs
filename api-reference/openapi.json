{
  "openapi": "3.1.0",
  "info": {
    "title": "OpenAPI Plant Store",
    "description": "A sample API that uses a plant store as an example to demonstrate features in the OpenAPI specification",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "www.atom.com/api/marketplace/api-docs-1/json.php?api_key=debc30f791373983&user_id=739"
    }
  ],
  "paths": {
    "/domains": {
      "get": {
        "description": "GetDomainList (Premium, Standard, Geo, All)",
        "parameters": [
          {
            "name": "api_token",
            "in": "query",
            "description": "API Key to get the details. Default value: debc30f791373983",
            "required": true,
            "schema": {
              "type": "string",
              "default": "debc30f791373983"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "UserId of the API Token. Default value: 739",
            "required": true,
            "schema": {
              "type": "string",
              "default": "739"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Domain Type (standard, premium or geo)",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["standard", "premium", "geo"]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of domains to return",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/categories": {
      "get": {
        "description": "List the categories for domains",
        "parameters": [
          {
            "name": "api_token",
            "in": "query",
            "description": "API Key to get the details. Default value: debc30f791373983",
            "required": true,
            "schema": {
              "type": "string",
              "default": "debc30f791373983"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "UserId of the API Token. Default value: 739",
            "required": true,
            "schema": {
              "type": "string",
              "default": "739"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/search": {
      "get": {
        "description": "Search Domains based on the keyword or category",
        "parameters": [
          {
            "name": "api_token",
            "in": "query",
            "description": "API Key to get the details. Default value: debc30f791373983",
            "required": true,
            "schema": {
              "type": "string",
              "default": "debc30f791373983"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "UserId of the API Token. Default value: 739",
            "required": true,
            "schema": {
              "type": "string",
              "default": "739"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "Search by category",
            "required": false
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "Search by Keyword",
            "required": false,
            "schema": {
              "type": "string",
              "format": "739"
            }
          },
          {
            "name": "name_type",
            "in": "query",
            "description": "Search by Type of Name",
            "required": false,
            "schema": {
              "type": "string",
              "format": "739"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/plants": {
      "get": {
        "description": "Returns all plants from the system that the user has access to",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Plant"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new plant in the store",
        "requestBody": {
          "description": "Plant to add to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPlant"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plant"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/plants/{id}": {
      "delete": {
        "description": "Deletes a single plant based on the ID supplied",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of plant to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Plant deleted",
            "content": {}
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Domain": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "Example Value",
            "type": "string"
          },
          "tag": {
            "description": "Model",
            "type": "string"
          }
        }
      },
      "Plant": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the plant1",
            "type": "string"
          },
          "tag": {
            "description": "Tag to specify the type",
            "type": "string"
          }
        }
      },
      "NewPlant": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Plant"
          },
          {
            "required": [
              "id"
            ],
            "type": "object",
            "properties": {
              "id": {
                "description": "Identification number of the plant",
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "Error": {
        "required": [
          "error",
          "message"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}